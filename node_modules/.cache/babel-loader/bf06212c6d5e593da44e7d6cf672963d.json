{"ast":null,"code":"var _jsxFileName = \"D:\\\\@Osjur\\\\Tugas\\\\project\\\\habit-rabbit\\\\src\\\\modules\\\\Signup\\\\Signup.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router';\nimport { Form, FormGroup, FormControl, FormLabel, Button, Spinner, FormControlProps } from \"react-bootstrap\";\nimport \"./Signup.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showSignupForm = () => {\n      const {\n        email,\n        password,\n        confirmPassword,\n        validated\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, \"Habbit Rabbit\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(FormGroup, {\n        controlId: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n        name: \"email\",\n        type: \"email\",\n        onChange: event => {\n          this.setState({\n            email: event.target.value\n          });\n        },\n        value: email,\n        minLength: 5,\n        isValid: emailRegex.test(email.toLowerCase()),\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormControl.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Must be a valid email address\")), /*#__PURE__*/React.createElement(FormGroup, {\n        controlId: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n        name: \"password\",\n        type: \"password\",\n        onChange: event => {\n          this.setState({\n            email: event.target.value\n          });\n        },\n        value: password,\n        minLength: 8,\n        isValid: password.length >= 8,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormControl.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, \"Must be at least 8 characters\"), /*#__PURE__*/React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, \"Must be at least 8 characters\")), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, \"Confirm Password\"), /*#__PURE__*/React.createElement(FormControl, {\n        name: \"confirmPassword\",\n        type: \"password\",\n        onChange: event => {\n          this.setState({\n            email: event.target.value\n          });\n        },\n        value: confirmPassword,\n        minLength: 8,\n        isValid: confirmPassword.length >= 8 && password === confirmPassword,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormControl.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, \"Passwords must be identical\")), /*#__PURE__*/React.createElement(Button, {\n        block: true,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, this.state.loading ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        size: \"sm\",\n        animation: \"border\",\n        className: \"mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }), \"Signing up\") : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, \"Sign up\"))), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    this.state = {\n      loading: false,\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n      user: undefined,\n      redirect: false,\n      validated: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, this.showSignupForm(), /*#__PURE__*/React.createElement(Button, {\n      className: \"back-button\",\n      block: true,\n      type: \"submit\",\n      href: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Kembali\")));\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["D:/@Osjur/Tugas/project/habit-rabbit/src/modules/Signup/Signup.js"],"names":["React","Component","Redirect","Form","FormGroup","FormControl","FormLabel","Button","Spinner","FormControlProps","Header","Footer","emailRegex","Signup","constructor","props","showSignupForm","email","password","confirmPassword","validated","state","event","setState","target","value","test","toLowerCase","length","loading","confirmationCode","user","undefined","redirect","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router';\r\nimport { Form, FormGroup, FormControl, FormLabel, Button, Spinner, FormControlProps } from \"react-bootstrap\";\r\nimport \"./Signup.css\";\r\n\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\n\r\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      confirmationCode: \"\",\r\n      user: undefined,\r\n      redirect: false,\r\n      validated: false,\r\n    };\r\n  }\r\n\r\n  showSignupForm = () => {\r\n    const { email, password, confirmPassword, validated } = this.state;\r\n    return (\r\n      <div>\r\n      <Form noValidate>\r\n        <h1>Habbit Rabbit</h1><br></br>\r\n        <FormGroup controlId=\"email\">\r\n          <FormLabel>Email</FormLabel>\r\n          <FormControl\r\n            name=\"email\"\r\n            type=\"email\"\r\n            onChange={(event)=>{this.setState({email:event.target.value})}}\r\n            value={email}\r\n            minLength={5}\r\n            isValid={emailRegex.test(email.toLowerCase())}\r\n            required />\r\n          <FormControl.Feedback type=\"invalid\">Must be a valid email address</FormControl.Feedback>\r\n        </FormGroup>\r\n        <FormGroup controlId=\"password\" >\r\n          <FormLabel>Password</FormLabel>\r\n          <FormControl\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={(event)=>{this.setState({email:event.target.value})}}\r\n            value={password}\r\n            minLength={8}\r\n            isValid={password.length >= 8}\r\n            required />\r\n          <FormControl.Feedback type=\"invalid\">Must be at least 8 characters</FormControl.Feedback>\r\n          <Form.Text className=\"text-muted\">\r\n            Must be at least 8 characters\r\n          </Form.Text>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <FormLabel>Confirm Password</FormLabel>\r\n          <FormControl\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            onChange={(event)=>{this.setState({email:event.target.value})}}\r\n            value={confirmPassword}\r\n            minLength={8}\r\n            isValid={confirmPassword.length >= 8 && password === confirmPassword}\r\n            required />\r\n          <FormControl.Feedback type=\"invalid\">Passwords must be identical</FormControl.Feedback>\r\n        </FormGroup>\r\n        <Button block type=\"submit\">\r\n          {this.state.loading ?\r\n            <span><Spinner size=\"sm\" animation=\"border\" className=\"mr-2\" />Signing up</span> :\r\n            <span>Sign up</span>}\r\n        </Button>\r\n      </Form>\r\n      <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Signup\">\r\n\r\n        {this.showSignupForm()}\r\n\r\n        <Button className='back-button' block type=\"submit\" href='/home'>\r\n          <span>Kembali</span>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}